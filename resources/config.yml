# AI Assistant Configuration

# API Provider Settings
# You can configure multiple AI providers and switch between them
api_providers:
  # Default provider to use (will auto-fallback to first available if this one isn't configured)
  default_provider: "openai"
  
  # OpenAI API Configuration
  openai:
    enabled: true
    api_key: "YOUR_OPENAI_API_KEY"
    model: "gpt-3.5-turbo"
    temperature: 0.7
    max_tokens: 500
    timeout: 30
  
  # OpenRouter API Configuration (supports many models from different providers)
  openrouter:
    enabled: true
    api_key: "YOUR_OPENROUTER_API_KEY"
    model: "openai/gpt-3.5-turbo"
    temperature: 0.7
    max_tokens: 500
    timeout: 30
  
  # Anthropic API Configuration (Claude models)
  anthropic:
    enabled: true
    api_key: "YOUR_ANTHROPIC_API_KEY"
    model: "claude-3-5-sonnet-20241022"
    temperature: 0.7
    max_tokens: 500
    timeout: 30
  
  # Google AI API Configuration (Gemini models)
  google:
    enabled: true
    api_key: "YOUR_GOOGLE_API_KEY"
    model: "gemini-1.5-flash"
    temperature: 0.7
    max_tokens: 500
    timeout: 30
  
  # Local AI Configuration (for self-hosted models)
  local:
    enabled: false
    endpoint: "http://localhost:8080/v1/completions"
    model: "local-model"
    temperature: 0.7
    max_tokens: 500
    timeout: 30

# AI Prompt Settings
prompts:
  # Default system prompt for the AI assistant
  default_system_prompt: "You are an AI assistant for a Minecraft server running PocketMine-MP. You can help players with crafting recipes, building calculations, and provide information about the server. Keep responses concise and helpful. Only answer questions related to Minecraft."
  
  # Custom prompt that server owners can modify
  custom_system_prompt: ""
  
  # Maximum conversation history to maintain per player (in messages)
  max_conversation_history: 10
  
  # Whether to include server information in the prompt
  include_server_info: true
  
  # Whether to include server features in the prompt
  include_server_features: true

# Message Settings - All plugin messages are configurable
messages:
  # Prefix for AI messages
  ai_prefix: "&b[AI Assistant] &f"
  
  # Welcome message for new players  
  welcome: "Welcome to the server! Type /ai to use the AI Assistant."
  
  # Enable/disable tips
  tips_enabled: true
  
  # Tip broadcast interval in seconds
  tips_interval: 900
  
  # Random tips to display
  tips:
    - "Did you know? You can ask the AI Assistant about crafting recipes!"
    - "Use /ai to open the AI Assistant interface."
    - "The AI Assistant can help you with building calculations!"
    - "Having trouble with redstone? Ask the AI Assistant!"
    - "Need help with farming in Minecraft? The AI Assistant has answers!"
    - "Lost in a cave? The AI Assistant can give you navigation tips!"
    - "Want to learn about new Minecraft updates? Ask the AI Assistant!"
    - "Building a house? Ask the AI Assistant for building advice!"
    - "Want to know server stats? Check the AI Assistant!"
    - "The AI Assistant can help you with many Minecraft-related questions."
    - "Lost? Ask the AI Assistant for help with coordinates and navigation."
    - "Need to calculate materials for a build? The AI Assistant can help!"
    - "Wondering what time it is in-game? Ask the AI Assistant!"
  # Console/In-game messages
  console:
    command_ingame_only: "§cThis command can only be used in-game."
    conversation_cleared: "§aYour conversation history has been cleared."
    no_permission_providers: "§cYou don't have permission to manage providers."
    response_sent: "§a Response sent to your chat!"
    provider_usage: "§cUsage: /ai provider [list|set <name>]"
    provider_set_usage: "§cUsage: /ai provider set <name>"
    provider_not_available: "§cProvider '{provider}' is not available."
    provider_set_success: "§aDefault provider set to '{provider}'."
    no_tokens_left: "§cYou don't have any tokens left. Use /ai to open the token shop."
    processing_query: "§bProcessing your query..."
    request_already_active: "§cYou already have an active AI request. Please wait for it to complete."
    
  # Form validation messages  
  forms:
    enter_question_first: "§cPlease enter a question before submitting. Try asking about Minecraft crafting, building, or server information."
    enter_item_name: "§cPlease enter an item name before submitting. Try 'diamond sword', 'iron pickaxe', 'crafting table', etc."
    no_tokens_purchase: "§cYou don't have any tokens left. Purchase more from the Token Shop."
    request_already_active: "§cYou already have an active AI request. Please wait for it to complete or cancel it."
    request_cancelled: "§eAI request cancelled."
    crafting_lookup_cancelled: "§eCrafting recipe lookup cancelled."
    building_calc_cancelled: "§eBuilding calculation cancelled."
    enter_question_generic: "§cPlease enter a question."
    enter_item_generic: "§cPlease enter an item name."
    generation_failed: "§cFailed to generate AI response. Please try again."
    invalid_dimensions: "§cPlease enter valid dimensions and material."
    ai_timeout_error: "§cAI request timed out. Please try again with a simpler question."
    ai_connection_error: "§cFailed to connect to AI service. Please try again later."
    ai_rate_limit_error: "§cToo many requests. Please wait a moment before trying again."
    ai_quota_exceeded: "§cAI service quota exceeded. Please try again later."
    ai_invalid_response: "§cReceived invalid response from AI. Please rephrase your question."
    ai_service_unavailable: "§cAI service is currently unavailable. Please try again later."
    ai_unknown_error: "§cAn unknown error occurred with the AI service. Please try again."
    
  # Token system messages
  tokens:
    system_disabled: "§cToken system is disabled."
    economy_not_found: "§cEconomy plugin not found. Please contact the server administrator."
    package_not_found: "§cPackage not found."
    insufficient_funds: "§cYou don't have enough money to buy this package."
    purchase_success: "§aYou purchased {tokens} tokens for {currency}{price}."
    
  # History messages
  history:
    session_not_found: "§cSession not found."
    conversation_deleted: "§aConversation deleted."
    new_session_created: "§aNew chat session created!"
    switched_to_session: "§aSwitched to the selected session!"
    
  # Loading messages
  loading:
    result_prefix: "§a[AI] §f"
    titles:
      chat_processing: "Processing AI Request"
      crafting_lookup: "Looking up Crafting Recipe"
      building_calculation: "Calculating Building Materials"
    content:
      query_label: "Your query:"
      waiting_message: "Please wait while the AI generates a response..."
      toast_notice: "(Loading will be shown via Toast Notification)"
      cancel_button: "Cancel"
      
  # Default UI messages
  ui:
    assistant_title: "AI Assistant"
    command_description: "Open the AI Assistant"
    
  # Default toast messages
  toasts:
    defaults:
      title: "§l§bNotification"
      body: "Notification message"
    # Token Shop toasts
    token_shop:
      welcome_title: "§l§bToken Shop"
      welcome_body: "Buy tokens for AI Assistant!"
      system_disabled_body: "Token system is disabled."
      economy_not_found_body: "Economy plugin not found."
      package_not_found_body: "Package not found."
      insufficient_funds_title: "§l§cInsufficient Funds"
      insufficient_funds_body: "You don't have enough money."
      
    # Chat Form toasts
    chat:
      welcome_title: "§l§bChat with AI"
      welcome_body: "Type your question in the text field below!"
      no_question_title: "§l§cNo Question Entered"
      no_question_body: "Please type your question in the text field first!"
      
    # Crafting Form toasts
    crafting:
      welcome_title: "§l§bCrafting Helper"
      welcome_body: "Type the item name you want to craft!"
      no_item_title: "§l§cNo Item Entered"
      no_item_body: "Please type an item name in the text field first!"
      
    # Building Calculator toasts
    building:
      welcome_title: "§l§bBuilding Calculator"
      welcome_body: "Enter dimensions for your build!"
      calculation_complete_title: "§l§aCalculation Complete"
      calculation_complete_body: "Building materials are ready!"
      
    # Response Form toasts
    response:
      new_question_title: "§l§bNew Question"
      new_question_body: "Ask another question"
      
    # Session toasts
    session:
      new_session_title: "§l§bNew Session"
      new_session_body: "Started a new conversation session"
      
    # Main Menu toasts
    main_menu:
      title: "§l§bMain Menu"
      body: "Welcome to the AI Assistant"
      
    # Specific toast presets for legacy sendSpecificToastNotification calls
    presets:
      no_tokens:
        title: "§l§cNo Tokens Left"
        body: "You need tokens to use AI features. Visit the Token Shop!"
      request_active:
        title: "§l§eRequest Active"
        body: "Please wait for your current request to complete."
      request_cancelled:
        title: "§l§7Request Cancelled"
        body: "Your AI request has been cancelled."
      main_menu:
        title: "§l§bMain Menu"
        body: "Welcome back to the main menu!"
      processing:
        title: "§l§bProcessing"
        body: "AI is working on your request..."
      response_ready:
        title: "§l§aResponse Ready"
        body: "Your AI response is ready to view!"
      recipe_found:
        title: "§l§aRecipe Found"
        body: "Crafting recipe retrieved successfully!"
      calculation_complete:
        title: "§l§aCalculation Complete"
        body: "Building materials calculation is ready!"
      purchase_complete:
        title: "§l§aPurchase Complete"
        body: "Successfully purchased {tokens} tokens!"
      view_response_ready:
        title: "§l§bView Response"
        body: "Click 'View Response' in the main menu to see your AI answer!"
    
  # Setup messages
  setup:
    welcome_header: "§a=== AI Assistant Setup ==="
    choose_provider: "§bChoose an AI provider to configure:"
    provider_list: "§eAvailable providers: OpenAI, OpenRouter, Anthropic, Google AI, Local AI"
    usage_format: "§eUsage: /ai setup <provider> <api_key>"
    provider_openai: "§f1. §aOpenAI (GPT models)"
    provider_openrouter: "§f2. §aOpenRouter (Multiple models from different providers)"
    provider_anthropic: "§f3. §aAnthropic (Claude models)"
    provider_google: "§f4. §aGoogle AI (Gemini models)"
    provider_local: "§f5. §aLocal AI (Self-hosted models)"
    enter_api_key: "§fEnter your API key for {provider}:"
    invalid_provider: "§cInvalid provider selection."
    missing_args: "§cUsage: /ai setup <provider> <api_key>"
    setup_complete: "§aProvider {provider} configured successfully!"
    admin_only: "§cOnly administrators can access setup."
    usage_example: "§7Example: /ai setup openai sk-xxx gpt-4"
    note_anthropic_local: "§7Note: Anthropic and Local providers accept any model name"
    missing_arguments: "§cMissing arguments! Usage: /ai setup <provider> <api_key> <model>"
    invalid_provider_list: "§cInvalid provider! Supported providers: {providers}"
    setting_up: "§eSetting up provider directly..."
    config_success: "§a✓ Successfully configured {provider} with model {model}!"
    provider_set_default: "§7Provider has been set as default."
    note_anthropic: "§7Note: Use models like claude-3-5-sonnet-20241022, claude-3-opus-20240229"
    note_local: "§7Note: Make sure your local endpoint is configured properly"
    note_openai: "§7Note: Use models like gpt-4, gpt-3.5-turbo"
    note_openrouter: "§7Note: Use models like openai/gpt-4, anthropic/claude-3-5-sonnet"
    note_google: "§7Note: Use models like gemini-pro, gemini-1.5-flash"
    
  # Help messages
  help:
    header: "§a=== AI Assistant Help ==="
    command_ai: "§e/ai §f- Open the AI Assistant interface"
    command_help: "§e/ai help §f- Show this help message" 
    command_clear: "§e/ai clear §f- Clear your conversation history"
    command_question: "§e/ai <question> §f- Ask a question directly"
    command_setup: "§e/ai setup §f- Configure AI providers (Admin only)"
    command_provider_list: "§e/ai provider list §f- List available AI providers"
    command_provider_set: "§e/ai provider set <name> §f- Set the default AI provider"
    separator: ""
    
  # Provider list messages
  providers:
    list_header: "§a=== Available AI Providers ==="
    no_providers: "§cNo AI providers are available."
    default_marker: "§e (Default)"
    
  # Provider error messages
  provider_errors:
    anthropic_api_error: "§cERROR: Anthropic API error: {error}"
    anthropic_empty_response: "§cERROR: Empty response from Anthropic API"
    anthropic_generation_failed: "§cERROR: I couldn't generate a response. Please try again later."
    anthropic_processing_error: "§cERROR: Error processing Anthropic response."
    openai_api_error: "§cERROR: OpenAI API error: {error}"
    openai_empty_response: "§cERROR: Empty response from OpenAI API"
    openai_generation_failed: "§cERROR: I couldn't generate a response. Please try again later."
    openai_processing_error: "§cERROR: Error processing OpenAI response."
    openrouter_request_cancelled: "§eAI request was cancelled."
    provider_not_available: "§cERROR: Provider '{provider}' not available for response parsing. Available: {available}"
    generic_error: "§cERROR: {error}"

# Toast Notification Settings
notifications:
  # Enable/disable toast notifications
  enabled: true
  
  
  # Default toast notification messages
  error:
    title: "§l§cError"
    body: "§fAn error occurred."
    
  success:
    title: "§l§aSuccess"
    body: "§fOperation completed successfully."
    
  info:
    title: "§l§bInfo"
    body: "§fInformation message."
    
  warning:
    title: "§l§eWarning"
    body: "§fWarning message."
  
  # Specific notification messages
  specific:
    no_permission:
      title: "§l§cNo Permission"
      body: "§fYou don't have permission to do this."
      
    request_cancelled:
      title: "§l§eRequest Cancelled"
      body: "§fYour request was cancelled."
      
    processing:
      title: "§l§bProcessing"
      body: "§fGenerating AI response..."
      
    main_menu:
      title: "§l§bMain Menu"
      body: "§fReturning to main menu"
      
    settings_saved:
      title: "§l§aSettings Saved"
      body: "§fSettings updated successfully"
      
    purchase_complete:
      title: "§l§aPurchase Complete"
      body: "§fBought {tokens} tokens!"
      
    response_ready:
      title: "§l§aAI Response"
      body: "§fResponse is ready to view!"
      
    looking_up:
      title: "§l§bLooking Up"
      body: "§fFinding crafting recipe for {item}"
      
    recipe_found:
      title: "§l§aRecipe Found"
      body: "§fCrafting recipe is ready!"
      
    no_tokens:
      title: "§l§cNo Tokens Left"
      body: "§fYou need tokens to use AI features. Visit the Token Shop!"
      
    request_active:
      title: "§l§eRequest Active"
      body: "§fPlease wait for your current AI request to complete"
      
    calculation_complete:
      title: "§l§aCalculation Complete"
      body: "§fBuilding materials calculation is ready!"

# Server Information Settings
server_info:
  enabled: true
  # Server name to display in AI responses
  server_name: "Your Minecraft Server"
  # Server description
  server_description: "A PocketMine-MP server with AI Assistant"
  # Server rules to include in AI responses
  server_rules:
    - "Be respectful to other players"
    - "No griefing or stealing"
    - "No spamming in chat"
    - "Have fun!"
  # Server owner information
  owner_name: "ServerOwner"
  # Whether to include player coordinates in responses
  show_coordinates: true
  # Whether to include server statistics in responses
  show_statistics: true

# Token System Settings
tokens:
  # Enable token system
  enabled: true
  # Free daily tokens (number of free chats per day)
  free_daily_tokens: 3
  # Token prices (how much each token costs)
  token_price: 100
  # Bulk token packages
  token_packages:
    - name: "Small Package"
      tokens: 10
      price: 900
    - name: "Medium Package"
      tokens: 25
      price: 2000
    - name: "Large Package"
      tokens: 50
      price: 3500
  # Economy provider to use (economyapi, bedrockeconomy, coinapi)
  economy_provider: "economyapi"
  # Currency symbol
  currency_symbol: "$"

# Chat History Settings
history:
  # Enable chat history
  enabled: true
  # Maximum number of chat sessions to store per player
  max_sessions: 10
  # Maximum number of messages to store per session
  max_messages_per_session: 50
  # Enable search functionality
  search_enabled: true

# Advanced Settings
advanced:
  # Debug mode (enables additional logging)
  debug: false
  # Cache AI responses to reduce API calls
  cache_responses: true
  # Cache duration in seconds
  cache_duration: 3600
  # Rate limiting (per player)
  rate_limit:
    enabled: true
    max_requests: 10
    time_window: 60 # seconds
  # Maximum response length
  max_response_length: 1000
  # Whether to log all AI interactions
  log_interactions: true
  # View Response button settings
  view_response_button:
    enabled: true
    auto_show_delay: 3 # seconds to wait before auto-showing response
    show_toast_notification: true